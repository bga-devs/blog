<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://bga-devs.github.io/blog/blog/</id><title>BGA Developers</title><subtitle>TODO.</subtitle> <updated>2022-05-01T12:42:02+02:00</updated> <author> <name>Timothée Pecatte</name> <uri>https://bga-devs.github.io/blog/blog/</uri> </author><link rel="self" type="application/atom+xml" href="https://bga-devs.github.io/blog/blog/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://bga-devs.github.io/blog/blog/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 Timothée Pecatte </rights> <icon>/blog/assets/img/favicons/favicon.ico</icon> <logo>/blog/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Do the undo &amp;mdash; The search for an undo system</title><link href="https://bga-devs.github.io/blog/blog/posts/do-the-undo/" rel="alternate" type="text/html" title="Do the undo &amp;mdash; The search for an undo system" /><published>2022-04-27T14:00:00+02:00</published> <updated>2022-04-27T14:00:00+02:00</updated> <id>https://bga-devs.github.io/blog/blog/posts/do-the-undo/</id> <content src="https://bga-devs.github.io/blog/blog/posts/do-the-undo/" /> <author> <name>Guillaume Benny</name> </author> <category term="Tips" /> <summary> Let’s talk about undoing. BGA has an undo system but it has limitations: You only have one undo. If you have a multi-step action, undoing means restarting from the beginning. The undo system saves the whole database and restores everything. So it’s impossible to use when multiple players can do something to the database, whether in a multipleactiveplayer state — or if your inactive playe... </summary> </entry> <entry><title>Stuck with Stock?</title><link href="https://bga-devs.github.io/blog/blog/posts/stuck-with-stock/" rel="alternate" type="text/html" title="Stuck with Stock?" /><published>2022-04-20T14:00:00+02:00</published> <updated>2022-04-20T14:00:00+02:00</updated> <id>https://bga-devs.github.io/blog/blog/posts/stuck-with-stock/</id> <content src="https://bga-devs.github.io/blog/blog/posts/stuck-with-stock/" /> <author> <name>Guillaume Benny</name> </author> <category term="Tips" /> <summary> If you are on the bga-developer discord, you will often see this answer when someone asks about Stock: Don’t use stock. — Everyone (almost) You might want to use Stock in some special cases but most of the time you can have more control and use less code with a pure CSS solution. Let’s look at how we can do that… and more. CSS Sprite Let’s create a CSS sprite, a single image with the... </summary> </entry> <entry><title>Getting the database out of the stone age</title><link href="https://bga-devs.github.io/blog/blog/posts/stone-age-db/" rel="alternate" type="text/html" title="Getting the database out of the stone age" /><published>2022-04-06T14:00:00+02:00</published> <updated>2022-04-09T20:35:40+02:00</updated> <id>https://bga-devs.github.io/blog/blog/posts/stone-age-db/</id> <content src="https://bga-devs.github.io/blog/blog/posts/stone-age-db/" /> <author> <name>Guillaume Benny</name> </author> <category term="Tips" /> <summary> See what I did there? Stone Age? OK, sorry about that. BGA’s database layer is… old. Writting database requests by hand is tedious and prone to errors. So after developing 2 games on BGA, I understood enough of the framework to build my own library on top of what is provided. And the first thing on my todo list: a better database layer! Let’s start with a simple table named shape: $this-... </summary> </entry> <entry><title>Why (I) use TypeScript</title><link href="https://bga-devs.github.io/blog/blog/posts/why-use-typescript/" rel="alternate" type="text/html" title="Why (I) use TypeScript" /><published>2022-03-09T12:00:00+01:00</published> <updated>2022-03-10T12:02:39+01:00</updated> <id>https://bga-devs.github.io/blog/blog/posts/why-use-typescript/</id> <content src="https://bga-devs.github.io/blog/blog/posts/why-use-typescript/" /> <author> <name>Guy Baudouin</name> </author> <category term="Tips" /> <summary> Using TypeScript on my day-time job, I’m very used to it and I can see the advantages of it. As it is not integrated by default on BGA framework, I made a tutorial to set it up on your projects. I’ll show 2 examples, one using JavaScript, the other using TypeScript. In both cases, I just want to update a counter on the player panel when the player play a card (counter should go from 8 to 7). ... </summary> </entry> <entry><title>Translations - a recap</title><link href="https://bga-devs.github.io/blog/blog/posts/translations-summary/" rel="alternate" type="text/html" title="Translations - a recap" /><published>2021-11-28T11:00:00+01:00</published> <updated>2021-11-28T11:00:00+01:00</updated> <id>https://bga-devs.github.io/blog/blog/posts/translations-summary/</id> <content src="https://bga-devs.github.io/blog/blog/posts/translations-summary/" /> <author> <name>Timothée Pecatte</name> </author> <category term="Guide" /> <summary> As I usually say on the discord server for BGA developpers, translations are easy and hard. Hard because translations seems to be one of the most recurring issue developpers are facing on BGA, even for experienced developpers. And easy because we will see that the basic mechanisms can be summarized in a couple principles. This small guide is not here to replace documentation, please make sure ... </summary> </entry> </feed>
